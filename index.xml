<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eliot Andres blog</title>
    <link>https://ndres.me/</link>
    <description>Recent content on Eliot Andres blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Oct 2018 16:14:33 +0900</lastBuildDate>
    
	<atom:link href="https://ndres.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My approach to solving (almost) any machine learning problem</title>
      <link>https://ndres.me/post/approach-solve-any-machine-learning/</link>
      <pubDate>Fri, 19 Oct 2018 16:14:33 +0900</pubDate>
      
      <guid>https://ndres.me/post/approach-solve-any-machine-learning/</guid>
      <description>In this article, I’ll detail the technique I use to solve almost any AI / machine learning project. I can already hear you screaming behind your screen « there is no magic approach to ML » and you’d be right!
I would say that this technique applied to 90% of my projects. Without further ado, here’s the approach:
 Find a machine learning competition with a problem close to the one you want to solve Find the winning team’s solution Adapt this solution to your problem  Before detailing each step, I’d like to point out that the winning team solution is not used as is.</description>
    </item>
    
    <item>
      <title>Machine learning explained with gifs: style transfer</title>
      <link>https://ndres.me/post/machine-learning-with-gifs-style-transfer/</link>
      <pubDate>Tue, 29 May 2018 16:45:13 +0200</pubDate>
      
      <guid>https://ndres.me/post/machine-learning-with-gifs-style-transfer/</guid>
      <description>About style transfer Pioneered in 2015, style transfer is a concept that uses transfers the style of a painting to an existing photography, using neural networks. The original paper is A Neural Algorithm of Artistic Style by Leon A. Gatys, Alexander S. Ecker, and Matthias Bethge.
Here are a few examples taken from it:
   Style transfer example from the original paper   How it works This gif is meant to give you a rough idea on how style transfer works in the orignal paper:     Style transfer explained with a gif (click to enlarge)   Although I tried to make the gif self-explanatory, here are a few more details:</description>
    </item>
    
    <item>
      <title>How to make animated gifs from Matplotlib plots easily</title>
      <link>https://ndres.me/post/matplotlib-animated-gifs-easily/</link>
      <pubDate>Mon, 14 May 2018 21:33:13 +0100</pubDate>
      
      <guid>https://ndres.me/post/matplotlib-animated-gifs-easily/</guid>
      <description>The problem If you Google how to make an animated Matplotlib graph, you end up with code like that:
fig, ax = plt.subplots() x = np.arange(0, 2*np.pi, 0.01) line, = ax.plot(x, np.sin(x)) def animate(i): line.set_ydata(np.sin(x + i/10.0)) # update the data return line, # Init only required for blitting to give a clean slate. def init(): line.set_ydata(np.ma.array(x, mask=True)) return line, ani = animation.FuncAnimation(fig, animate, np.arange(1, 200), init_func=init, interval=25, blit=True)  The logic of using an init function and methods such as set_ydata is a bit too complex for my taste, so I ended up using a different approach</description>
    </item>
    
    <item>
      <title>Using a neural network to generate your next startup name</title>
      <link>https://ndres.me/post/using-neural-network-generate-startup-name/</link>
      <pubDate>Mon, 07 May 2018 20:50:22 +0100</pubDate>
      
      <guid>https://ndres.me/post/using-neural-network-generate-startup-name/</guid>
      <description>Inspired by a Dan Hon article on how to generate British placenames, I decided to train my own network to generate startup names.
The original code was made by Andej Karpathy, but there is a more modern and concise version in Keras, available here.
The results Here are a few of my favorites:
 Cuyation SaleBott Airr Energy Costapi Excel Worldeh Hight Biotherapeutics Joyai YouLab Rygo Inc. Lifester Mobilivy bitran OpenFactor  You can find a longer list here.</description>
    </item>
    
    <item>
      <title>Tutorial: Plotting your Facebook friend network using NetworkX and python-louvain</title>
      <link>https://ndres.me/post/friend-graph-tutorial/</link>
      <pubDate>Mon, 30 Apr 2018 16:13:15 +0100</pubDate>
      
      <guid>https://ndres.me/post/friend-graph-tutorial/</guid>
      <description>Last week I published an article showing you how I built a friend graph using you Facebook data.
This article is a detailed version showing you how to do it yourself. Here&amp;rsquo;s what we&amp;rsquo;ll end up with:
    Facebook friend network (click to enlarge)   Warning: To make such a graph, you need to scape all your mutual friends. Scrapping is automated but can take a few hours.</description>
    </item>
    
    <item>
      <title>Using Facebook data to plot my friend network</title>
      <link>https://ndres.me/post/facebook-graph-network/</link>
      <pubDate>Mon, 23 Apr 2018 11:02:15 +0200</pubDate>
      
      <guid>https://ndres.me/post/facebook-graph-network/</guid>
      <description>Inspired by a friend&amp;rsquo;s post, I decided to plot my Facebook network. To do so, I scrapped &amp;ldquo;mutual friends&amp;rdquo; and made the following graph:
    Facebook friend network (click to enlarge)   In this blog post, I&amp;rsquo;ll explain how the graph is made and how clusters are created. In a following blog post, I&amp;rsquo;ll explain how to make it yourself.
A few comments on the graph In this graph, each friend is represented by a node.</description>
    </item>
    
    <item>
      <title>Top 5 Best Jupyter Notebook Extensions</title>
      <link>https://ndres.me/post/best-jupyter-notebook-extensions/</link>
      <pubDate>Tue, 06 Mar 2018 11:48:17 +0100</pubDate>
      
      <guid>https://ndres.me/post/best-jupyter-notebook-extensions/</guid>
      <description>Notebook extensions are plug-ins that you can easily add to your Jupyter notebooks. The best way to install them is to use Jupyter NbExtensions Configurator. It will add a tab to let you enable/disable extensions:
   Screenshot of NbExtensions Configurator   Installation Installation with conda:
conda install -c conda-forge jupyter_contrib_nbextensions conda install -c conda-forge jupyter_nbextensions_configurator  Or with pip:
pip install jupyter_nbextensions_configurator jupyter_contrib_nbextensions jupyter contrib nbextension install --user jupyter nbextensions_configurator enable --user  Find more info about installation here</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ndres.me/about/</link>
      <pubDate>Sun, 27 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ndres.me/about/</guid>
      <description>I made a chatbot to answer your questions ! You can enable voice by clicking the unmute button. A classic about page is also available here.
Type your questions or use one of the following:  {{question}}   {{message.title}}           </description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://ndres.me/about_classic/</link>
      <pubDate>Sun, 27 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ndres.me/about_classic/</guid>
      <description>About I am a freelance machine learning engineer with a focus on porting models from prototypes to production. I may be available for your consulting projects.
Talks I often talks at meetups. You can also find here the video of my conference talk Processing 100+ million images per month with deep learning
Some of my side projects  Kaggle Past Solutions: A sortable and searchable compilation of solutions to past Kaggle competitions.</description>
    </item>
    
    <item>
      <title>Converting a Caffe model to TensorFlow</title>
      <link>https://ndres.me/post/convert-caffe-to-tensorflow/</link>
      <pubDate>Wed, 07 Jun 2017 23:02:15 +0200</pubDate>
      
      <guid>https://ndres.me/post/convert-caffe-to-tensorflow/</guid>
      <description>Converting a Caffe model to TensorFlow The Caffe Model Zoo is an extraordinary place where reasearcher share their models. Caffe is an awesome framework, but you might want to use TensorFlow instead. In this blog post, I&amp;rsquo;ll show you how to convert the Places 365 model to TensorFlow.
Using Caffe-Tensorflow to convert your model Your best bet is to use the awesome caffe-tensorflow. This project takes a prototxt file as an input and converts it to a python file so you can use the model with TensorFlow.</description>
    </item>
    
    <item>
      <title>Faster inference in TensorFlow using XLA.</title>
      <link>https://ndres.me/post/faster-inference-tensorflow/</link>
      <pubDate>Mon, 08 May 2017 14:52:12 +0200</pubDate>
      
      <guid>https://ndres.me/post/faster-inference-tensorflow/</guid>
      <description>About inference Using neural networks is primarily made of 2 phases: training your model and using it. The later part can also be called inference, forward pass or evaluation.
For most researchers, most of the time is used by training : they have to retrain using different architectures or different parameters. However, if you are using deep learning in production, inference is the most critical step.
What is XLA During the TensorFlow summit 2017, the TensorFlow team introduced XLA (Accelerated Linear Algebra).</description>
    </item>
    
    <item>
      <title>Turn any Jupyter notebook into a REST API</title>
      <link>https://ndres.me/post/jupyter-notebook-rest-api/</link>
      <pubDate>Sun, 07 May 2017 16:25:35 +0200</pubDate>
      
      <guid>https://ndres.me/post/jupyter-notebook-rest-api/</guid>
      <description>Jupyter Notebooks are pretty awesome. They allow you to prototype and experiment with ease. But did you know that you can also use them as a backend ?
In this tutorial, I&amp;rsquo;ll show you how to make a simple api that converts degrees to radians. We should end up with something like this:
$ curl &amp;quot;http://serverIp:8888/convert?angle=180&amp;quot; #{&amp;quot;convertedAngle&amp;quot;: 3.141592653589793}  Installation Assuming that jupyter notebook is already installed, first install the kernel_gateway:</description>
    </item>
    
  </channel>
</rss>