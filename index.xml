<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eliot Andres blog</title>
    <link>https://ndres.me/</link>
    <description>Recent content on Eliot Andres blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>While the models are training: a machine learning blog</copyright>
    <lastBuildDate>Tue, 06 Mar 2018 11:48:17 +0100</lastBuildDate>
    
	<atom:link href="https://ndres.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Top 5 Best Jupyter Notebook Extensions</title>
      <link>https://ndres.me/post/best-jupyter-notebook-extensions/</link>
      <pubDate>Tue, 06 Mar 2018 11:48:17 +0100</pubDate>
      
      <guid>https://ndres.me/post/best-jupyter-notebook-extensions/</guid>
      <description>Notebook extensions are plug-ins that you can easily add to your Jupyter notebooks. The best way to install them is to use Jupyter NbExtensions Configurator. It will add a tab to let you enable/disable extensions:
  Screenshot of NbExtensions Configurator   Installation Installation with conda:
conda install -c conda-forge jupyter_contrib_nbextensions conda install -c conda-forge jupyter_nbextensions_configurator  Or with pip:
pip install jupyter_nbextensions_configurator jupyter_contrib_nbextensions jupyter contrib nbextension install --user jupyter nbextensions_configurator enable --user  Find more info about installation here</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://ndres.me/about/</link>
      <pubDate>Sun, 27 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ndres.me/about/</guid>
      <description>About I am a freelance machine learning engineer with a focus on porting models from prototypes to production. I am sometimes available for your consulting projects.
Some of my side projects  Kaggle Past Solutions: A sortable and searchable compilation of solutions to past Kaggle competitions. pretrained.ml: A sortable and searchable compilation of solutions to past Kaggle competitions. Hopsell: Shopify plug-in  Contact You can reach me on Twitter, Linkedin, GitHub</description>
    </item>
    
    <item>
      <title>Converting a Caffe model to Tensorflow</title>
      <link>https://ndres.me/post/convert-caffe-to-tensorflow/</link>
      <pubDate>Wed, 07 Jun 2017 23:02:15 +0200</pubDate>
      
      <guid>https://ndres.me/post/convert-caffe-to-tensorflow/</guid>
      <description>Converting a Caffe model to Tensorflow The Caffe Model Zoo is an extraordinary place where reasearcher share their models. Caffe is an awesome framework, but you might want to use Tensorflow instead. In this blog post, I&amp;rsquo;ll show you how to convert the Places 365 model to Tensorflow.
Using Caffe-Tensorflow to convert your model Your best bet is to use the awesome caffe-tensorflow. This project takes a prototxt file as an input and converts it to a python file so you can use the model with Tensorflow.</description>
    </item>
    
    <item>
      <title>Faster inference in Tensorflow using XLA.</title>
      <link>https://ndres.me/post/faster-inference-tensorflow/</link>
      <pubDate>Mon, 08 May 2017 14:52:12 +0200</pubDate>
      
      <guid>https://ndres.me/post/faster-inference-tensorflow/</guid>
      <description>About inference Using neural networks is primarily made of 2 phases: training your model and using it. The later part can also be called inference, forward pass or evaluation.
For most researchers, most of the time is used by training : they have to retrain using different architectures or different parameters. However, if you are using deep learning in production, inference is the most critical step.
What is XLA During the tensorflow summit 2017, the Tensorflow team introduced XLA (Accelerated Linear Algebra).</description>
    </item>
    
    <item>
      <title>Turn any Jupyter notebook into a REST API</title>
      <link>https://ndres.me/post/jupyter-notebook-rest-api/</link>
      <pubDate>Sun, 07 May 2017 16:25:35 +0200</pubDate>
      
      <guid>https://ndres.me/post/jupyter-notebook-rest-api/</guid>
      <description>Jupyter Notebooks are pretty awesome. They allow you to prototype and experiment with ease. But did you know that you can also use them as a backend ?
In this tutorial, I&amp;rsquo;ll show you how to make a simple api that converts degrees to radians. We should end up with something like this:
$ curl &amp;quot;http://serverIp:8888/convert?angle=180&amp;quot; #{&amp;quot;convertedAngle&amp;quot;: 3.141592653589793}  Installation Assuming that jupyter notebook is already installed, first install the kernel_gateway:</description>
    </item>
    
  </channel>
</rss>